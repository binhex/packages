name: workflow-package-build-manual

on:
  workflow_dispatch:
    inputs:
      package_name:
        description: 'Enter AUR package to build'
        required: true
        default: 'htpasswd,libtorrent-rasterbar-1_2-git,python2-bin'

jobs:
  package-build:
    runs-on: ubuntu-latest
    env:
      PACKAGE_PATH: "${GITHUB_WORKSPACE}/compiled/amd64"
      AUR_PACKAGES: "${{ github.event.inputs.package_name }}"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU for multi-arch support
        uses: docker/setup-qemu-action@v3
      - name: Login to GitHub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: DEBUG Show Runners environment
        shell: bash
        run: |
            export
      - name: Build AUR packages
        shell: bash
        run: |
            cd /tmp || exit 1

            # ensure we have no pre-existing packages, as github re-uses executors
            rm -f *.tar.zst

            echo "Package(s) to build: ${{ env.AUR_PACKAGES }}"
            docker pull binhex/arch-devel:latest
            docker run -v $(pwd):/host -t binhex/arch-devel bash -c "refresh.sh && aur.sh --aur-package '${{ env.AUR_PACKAGES }}' --package-path '/host'"
      - name: DEBUG Showing compiled package(s) on host filesystem
        shell: bash
        run: |
            cd /tmp || exit 1

            echo "[debug] Working in directory: $(pwd)"
            if ! ls -la *.tar.zst 2>/dev/null; then
              echo "[info] No tar.zst files found - no packages were built, exiting workflow"
              exit 0
            fi
      - name: Remove all versioning information from the package filenames and move to workspace
        shell: bash
        run: |
            cd /tmp || exit 1

            # set permissions to ensure we can rename packages
            #sudo chown $(id -u):$(id -g) $(pwd)

            for filepath in *.tar.zst; do
              if [[ -f "${filepath}" ]]; then
                base_name="${filepath}"
                package_name=$(echo "${base_name}" | grep -P -o -m 1 '^[^\d]+')
                package_full_name="${package_name}x86_64.pkg.tar.zst"
                if [[ "${base_name}" != "${package_full_name}" ]]; then
                  if [[ ! -f "${{ env.PACKAGE_PATH }}/${package_full_name}" ]]; then
                    echo "[info] Moving package from '${filepath}' to '${{ env.PACKAGE_PATH }}/${package_full_name}'"
                    mv "${filepath}" "${{ env.PACKAGE_PATH }}/${package_full_name}"
                    echo "[info] Successfully renamed package filename"
                  else
                    echo "[warn] Target file '${package_full_name}' already exists, skipping rename"
                  fi
                else
                  echo "[info] File '${base_name}' already has correct naming format"
                fi
              fi
            done
      - name: Commit and push packages to currently checked out GitHub repository
        shell: bash
        run: |
            git config --global user.name "github-actions[bot]"
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git add "${{ env.PACKAGE_PATH }}/"*.tar.zst
            if git commit -m "Added compiled AUR package(s): ${{ github.event.inputs.package_name }}"; then
              git push
              echo "Pushed compiled package(s) to GitHub repository."
            else
              echo "No changes to commit."
            fi
